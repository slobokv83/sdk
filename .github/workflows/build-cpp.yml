name: Build C++ SDK

on:
  # pull_request:
  #   branches:
  #     - master
  workflow_dispatch:

env:
  LIBS_PATH: ${{ github.workspace }}/libs

jobs:
  generate_schemas:
    uses: ./.github/workflows/generate_schemas.yml

  build_rust:
    uses: ./.github/workflows/build-rust-cross-platform.yml

  # Define a job template with placeholders
  build_cpp_template:
    name: Build C++ for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          # - windows-2022
          - ubuntu-22.04
          - macos-12
        target:
          # - x86_64-pc-windows-msvc
          - x86_64-linux-gnu
          - x86_64-apple-macos12
          - arm64-apple-macos12
        compiler:
          # - msvc
          - llvm
        prefix:
          # - ""
          - lib
          - lib
          - lib
        extension:
          # - dll
          - so
          - dylib
          - dylib
        include:
          - ""
    needs:
      - generate_schemas
      - build_rust
    steps:
      - name: Checkout Repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Download C++ schemas artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: schemas.hpp
          path: languages/cpp/include

      - name: Setup C++
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: true
          cppcheck: true
          clangtidy: true

      # Download steps for specific platforms

      - name: Download x86_64-apple-darwin files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files-x86_64-apple-darwin
          path: languages/cpp/build
        if: contains(matrix.os, 'macos') && matrix.target == 'x86_64-apple-macos12' && matrix.architecture == 'x86_64'

      - name: Download aarch64-apple-darwin files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files-aarch64-apple-darwin
          path: languages/cpp/build
        if: contains(matrix.os, 'macos') && matrix.target == 'arm64-apple-macos12' && matrix.architecture == 'arm64'

      - name: Download x86_64-unknown-linux-gnu files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files-x86_64-unknown-linux-gnu
          path: languages/cpp/build
        if: contains(matrix.os, 'ubuntu') && matrix.target == 'x86_64-linux-gnu'

      # - name: Download x86_64-pc-windows-msvc files
      #   uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      #   with:
      #     name: libbitwarden_c_files-x86_64-pc-windows-msvc
      #     path: languages/cpp/build
      #   if: contains(matrix.os, 'windows') && matrix.target == 'x86_64-pc-windows-msvc'

      - name: Create Build folder
        run: mkdir -p languages/cpp/build

      - name: Create libs folder
        run: mkdir -p libs

      - name: Download Dependencies
        if: "!contains(matrix.os, 'windows')"
        working-directory: ${{ env.LIBS_PATH }}
        run: |
          wget https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz
          tar -xvf v3.11.2.tar.gz
          wget https://boostorg.jfrog.io/artifactory/main/release/1.83.0/source/boost_1_83_0.tar.gz
          tar -xvf boost_1_83_0.tar.gz
          cd boost_1_83_0
          ./bootstrap.sh --prefix=${{ env.LIBS_PATH }}
          ./b2 install

      # Additional platform-specific steps can be added here

      - name: Build C++ Project
        if: "!contains(matrix.os, 'windows')"
        working-directory: languages/cpp/build
        run: |
          cmake .. -DNLOHMANN=${{ env.LIBS_PATH }}/json-3.11.2/include -DBOOST=${{ env.LIBS_PATH }}/include -DTARGET=./build/${{ matrix.prefix }}bitwarden_c.${{ matrix.extension }}
          cmake --build .

      - name: Upload C++ package
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2 actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: Bitwarden-SDK-${{ matrix.target }}
          path: |
            ./languages/cpp/build/${{ matrix.prefix }}BitwardenClient.${{ matrix.extension }}
            ./languages/cpp/build/${{ matrix.prefix }}bitwarden_c.${{ matrix.extension }}
            ./languages/cpp/include/
