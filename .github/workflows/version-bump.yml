---
name: Version Bump

on:
  workflow_dispatch:
    inputs:
      project:
        description: "Project"
        required: true
        type: choice
        options:
          - napi
          - bitwarden
          - bitwarden-api-api
          - bitwarden-api-identity
          - cli
          - bitwarden-json
      version_number:
        description: "New Version"
        required: true

defaults:
  run:
    shell: bash

jobs:
  bump_version:
    name: "Bump ${{ github.event.inputs.project }} Version"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Branch
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Install rust
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2.7.0

      - name: Install cargo-release
        run: cargo install cargo-edit

      - name: Login to Azure - Prod Subscription
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@c970b0fb89bd966749280e832928db62040812bf
        with:
          keyvault: "bitwarden-ci"
          secrets: "github-gpg-private-key, github-gpg-private-key-passphrase"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef # v6.0.0
        with:
          gpg_private_key: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key }}
          passphrase: ${{ steps.retrieve-secrets.outputs.github-gpg-private-key-passphrase }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create Version Branch
        id: branch
        env:
          VERSION: ${{ github.event.inputs.version_number }}
          PROJECT: ${{ github.event.inputs.project }}
        run: git switch -c sdk-${PROJECT}_version_bump_${VERSION}

      ########################
      # VERSION BUMP SECTION #
      ########################

      ### napi
      - name: Bump @bitwarden/sdk-napi Version
        if: ${{ github.event.inputs.project == 'napi' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        working-directory: "crates/bitwarden-napi"
        run: |
          npm ci
          npm version ${VERSION}

      - name: Bump napi crate Version
        if: ${{ github.event.inputs.project == 'napi' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        run: cargo-set-version set-version -p bitwarden-napi ${VERSION}

      ### bitwarden

      - name: Bump bitwarden crate Version
        if: ${{ github.event.inputs.project == 'bitwarden' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        run: cargo-set-version set-version -p bitwarden ${VERSION}

      ### bitwarden-api-api

      - name: Bump bitwarden-api-api crate Version
        if: ${{ github.event.inputs.project == 'bitwarden-api-api' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        run: cargo-set-version set-version -p bitwarden-api-api ${VERSION}

      ### bitwarden-api-identity

      - name: Bump bitwarden-api-identity crate Version
        if: ${{ github.event.inputs.project == 'bitwarden-api-identity' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        run: cargo-set-version set-version -p bitwarden-api-identity ${VERSION}

      ### cli

      - name: Bump cli Version
        if: ${{ github.event.inputs.project == 'cli' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        run: cargo-set-version set-version -p bws ${VERSION}

      ### bitwarden-json

      - name: Bump bitwarden-json crate Version
        if: ${{ github.event.inputs.project == 'bitwarden-json' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
        run: cargo-set-version set-version -p bitwarden-json ${VERSION}

      ############################
      # VERSION BUMP SECTION END #
      ############################

      - name: Setup git
        run: |
          git config --local user.email "106330231+bitwarden-devops-bot@users.noreply.github.com"
          git config --local user.name "bitwarden-devops-bot"

      - name: Check if version changed
        id: version-changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_to_commit=TRUE" >> $GITHUB_OUTPUT
          else
            echo "changes_to_commit=FALSE" >> $GITHUB_OUTPUT
            echo "No changes to commit!";
          fi

      - name: Run prettier
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        run: |
          npm ci
          npm run prettier

      - name: Commit files
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
          PROJECT: ${{ github.event.inputs.project }}
        run: git commit -m "Bumped sdk-${PROJECT} version to ${VERSION}" -a

      - name: Push changes
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          VERSION: ${{ github.event.inputs.version_number }}
          PROJECT: ${{ github.event.inputs.project }}
        run: git push -u origin sdk-${PROJECT}_version_bump_${VERSION}

      - name: Create Bump Version PR
        if: ${{ steps.version-changed.outputs.changes_to_commit == 'TRUE' }}
        env:
          PR_BRANCH: "sdk-${{ github.event.inputs.project }}_version_bump_${{ github.event.inputs.version_number }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          BASE_BRANCH: master
          TITLE: "Bump ${{ github.event.inputs.project }} version to ${{ github.event.inputs.version_number }}"
        run: |
          gh pr create --title "$TITLE" \
            --base "$BASE" \
            --head "$PR_BRANCH" \
            --label "version update" \
            --label "automated pr" \
            --body "
              ## Type of change
              - [ ] Bug fix
              - [ ] New feature development
              - [ ] Tech debt (refactoring, code cleanup, dependency upgrades, etc)
              - [ ] Build/deploy pipeline (DevOps)
              - [X] Other

              ## Objective
              Automated ${{ github.event.inputs.project }} version bump to ${{ github.event.inputs.version_number }}"
