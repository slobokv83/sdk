---
name: Release CLI
run-name: Release CLI ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Initial Release"
        type: choice
        options:
          - Initial Release
          - Redeploy
          - Dry Run

defaults:
  run:
    shell: bash

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Branch check
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/rc" ]] && [[ "$GITHUB_REF" != "refs/heads/hotfix-rc-cli" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'rc' or 'hotfix-rc-cli' branches"
            echo "==================================="
            exit 1
          fi

      - name: Check Release Version
        id: version
        run: |
          VERSION=$(grep -o '^version = ".*"' crates/bws/Cargo.toml | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub deployment
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: chrnorm/deployment-action@d42cde7132fcec920de534fffc3be83794335c00 # v2.0.5
        id: deployment
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "in_progress"
          environment: "CLI - Production"
          description: "Deployment ${{ steps.version.outputs.version }} from branch ${{ github.ref_name }}"
          task: release

      - name: Download all Release artifacts
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@c970b0fb89bd966749280e832928db62040812bf
        with:
          workflow: build-cli.yml
          path: packages
          workflow_conclusion: success
          branch: ${{ github.ref_name }}

      - name: Dry Run - Download all artifacts
        if: ${{ github.event.inputs.release_type == 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@c970b0fb89bd966749280e832928db62040812bf
        with:
          workflow: build-cli.yml
          path: packages
          workflow_conclusion: success
          branch: master

      - name: Get checksum files
        uses: bitwarden/gh-actions/get-checksum@c970b0fb89bd966749280e832928db62040812bf
        with:
          packages_dir: "packages"
          file_path: "packages/bws-sha256-checksums-${{ steps.version.outputs.version }}.txt"

      - name: Create release
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
        env:
          PKG_VERSION: ${{ steps.version.outputs.version }}
        with:
          artifacts: "packages/bws-x86_64-apple-darwin-${{ env.PKG_VERSION }}.zip,
            packages/bws-aarch64-apple-darwin-${{ env.PKG_VERSION }}.zip,
            packages/bws-macos-universal-${{ env.PKG_VERSION }}.zip,
            packages/bws-x86_64-pc-windows-msvc-${{ env.PKG_VERSION }}.zip,
            packages/bws-aarch64-pc-windows-msvc-${{ env.PKG_VERSION }}.zip,
            packages/bws-x86_64-unknown-linux-gnu-${{ env.PKG_VERSION }}.zip,
            packages/bws-aarch64-unknown-linux-gnu-${{ env.PKG_VERSION }}.zip,
            packages/THIRDPARTY.html,
            packages/bws-sha256-checksums-${{ env.PKG_VERSION }}.txt"
          commit: ${{ github.sha }}
          tag: bws-v${{ env.PKG_VERSION }}
          name: bws CLI v${{ env.PKG_VERSION }}
          body: "<insert release notes here>"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

      - name: Update deployment status to Success
        if: ${{ github.event.inputs.release_type != 'Dry Run' && success() }}
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # v2.0.1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status to Failure
        if: ${{ github.event.inputs.release_type != 'Dry Run' && failure() }}
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # v2.0.1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

  publish:
    name: Publish bws to crates.io
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Login to Azure
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@c970b0fb89bd966749280e832928db62040812bf
        with:
          keyvault: "bitwarden-ci"
          secrets: "cratesio-api-token"

      - name: Install rust
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2.7.0

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Cargo release
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        env:
          PUBLISH_GRACE_SLEEP: 10
          CARGO_REGISTRY_TOKEN: ${{ steps.retrieve-secrets.outputs.cratesio-api-token }}
        run: cargo-release release publish -p bws --execute --no-confirm
